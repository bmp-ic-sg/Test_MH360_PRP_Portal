!(function (n) {
    "function" == typeof define && define.amd
        ? define(["jquery"], function (i) {
            n(i, window, document);
        })
        : "object" == typeof module && module.exports
            ? (module.exports = n(require("jquery"), window, document))
            : n(jQuery, window, document);
})(function (n, i, t, e) {
    "use strict";
    var a = "nationalitySelect",
        s = 1,
        o = { defaultCountry: "", defaultStyling: "inside", excludeCountries: [], onlyCountries: [], preferredCountries: ["us", "gb"], localizedCountries: null, responsiveDropdown: n(i).width() < 768 },
        r = 38,
        u = 40,
        l = 13,
        h = 27,
        c = 8,
        d = 32,
        p = 65,
        y = 90;
    function f(i, t) {
        (this.element = i), (this.options = n.extend({}, o, t)), (this._defaults = o), (this.ns = "." + a + s++), (this._name = a), this.init();
    }
    n(i).on("load", function () {
        !0;
    }),
        (f.prototype = {
            init: function () {
                return (
                    this._processCountryData(),
                    this._generateMarkup(),
                    this._setInitialState(),
                    this._initListeners(),
                    (this.autoCountryDeferred = new n.Deferred()),
                    this._initAutoCountry(),
                    (this.typedLetters = ""),
                    this.autoCountryDeferred
                );
            },
            _processCountryData: function () {
                this._setInstanceCountryData(),
                    this._setPreferredCountries(),
                    this.options.localizedCountries && this._translateCountriesByLocale(),
                    (this.options.onlyCountries.length || this.options.localizedCountries) && this.countries.sort(this._countryNameSort);
            },
            _setInstanceCountryData: function () {
                var i = this;
                if (this.options.onlyCountries.length) {
                    var t = [];
                    n.each(this.options.onlyCountries, function (n, e) {
                        var a = i._getCountryData(e, !0);
                        a && t.push(a);
                    }),
                        (this.countries = t);
                } else if (this.options.excludeCountries.length) {
                    var e = this.options.excludeCountries.map(function (n) {
                        return n.toLowerCase();
                    });
                    this.countries = g.filter(function (n) {
                        return -1 === e.indexOf(n.iso2);
                    });
                } else this.countries = g;
            },
            _setPreferredCountries: function () {
                var i = this;
                (this.preferredCountries = []),
                    n.each(this.options.preferredCountries, function (n, t) {
                        var e = i._getCountryData(t, !1);
                        e && i.preferredCountries.push(e);
                    });
            },
            _translateCountriesByLocale() {
                for (let n = 0; n < this.countries.length; n++) {
                    const i = this.countries[n].iso2.toLowerCase();
                    this.options.localizedCountries.hasOwnProperty(i) && (this.countries[n].name = this.options.localizedCountries[i]);
                }
            },
            _countryNameSort: (n, i) => n.name.localeCompare(i.name),
            _generateMarkup: function () {
                this.countryInput = n(this.element);
                var t = "country-select";
                this.options.defaultStyling && (t += " " + this.options.defaultStyling), this.countryInput.wrap(n("<div>", { class: t }));
                var e = n("<div>", { class: "flag-dropdown" }).insertAfter(this.countryInput),
                    a = n("<div>", { class: "selected-flag" }).appendTo(e);
                (this.selectedFlagInner = n("<div>", { class: "flag" }).appendTo(a)),
                    n("<div>", { class: "arrow" }).appendTo(a),
                    (this.countryList = n("<ul>", { class: "country-list v-hide" }).appendTo(e)),
                    this.preferredCountries.length && (this._appendListItems(this.preferredCountries, "preferred"), n("<li>", { class: "divider" }).appendTo(this.countryList)),
                    this._appendListItems(this.countries, ""),
                    (this.countryCodeInput = n("#" + this.countryInput.attr("id") + "_code")),
                    this.countryCodeInput ||
                    ((this.countryCodeInput = n('<input type="hidden" id="' + this.countryInput.attr("id") + '_code" name="' + this.countryInput.attr("name") + '_code" value="" />')),
                        this.countryCodeInput.insertAfter(this.countryInput)),
                    (this.dropdownHeight = this.countryList.outerHeight()),
                    this.options.responsiveDropdown &&
                    n(i)
                        .resize(function () {
                            n(".country-select").each(function () {
                                var i = this.offsetWidth;
                                n(this)
                                    .find(".country-list")
                                    .css("width", i + "px");
                            });
                        })
                        .resize(),
                    this.countryList.removeClass("v-hide").addClass("hide"),
                    (this.countryListItems = this.countryList.children(".country"));
            },
            _appendListItems: function (i, t) {
                var e = "";
                n.each(i, function (n, i) {
                    (e += '<li class="country ' + t + '" data-country-code="' + i.iso2 + '">'), (e += '<div class="flag ' + i.iso2 + '"></div>'), (e += '<span class="country-name">' + i.name + "</span>"), (e += "</li>");
                }),
                    this.countryList.append(e);
            },
            _setInitialState: function () {
                var n = !1;
                this.countryInput.val() && (n = this._updateFlagFromInputVal());
                var i,
                    t = this.countryCodeInput.val();
                (t && this.selectCountry(t), n) ||
                    ((this.options.defaultCountry && (i = this._getCountryData(this.options.defaultCountry, !1))) || (i = this.preferredCountries.length ? this.preferredCountries[0] : this.countries[0]), (this.defaultCountry = i.iso2));
            },
            _initListeners: function () {
                var n = this;
                this.countryInput.on("keyup" + this.ns, function () {
                    n._updateFlagFromInputVal();
                }),
                    this.selectedFlagInner.parent().on("click" + this.ns, function (i) {
                        n.countryList.hasClass("hide") && !n.countryInput.prop("disabled") && n._showDropdown();
                    }),
                    this.countryInput.on("blur" + this.ns, function () {
                        n.countryInput.val() != n.getSelectedCountryData().name && n.setCountry(n.countryInput.val()), n.countryInput.val(n.getSelectedCountryData().name);
                    });
            },
            _initAutoCountry: function () {
                "auto" === this.options.initialCountry ? this._loadAutoCountry() : (this.defaultCountry && this.selectCountry(this.defaultCountry), this.autoCountryDeferred.resolve());
            },
            _loadAutoCountry: function () {
                n.fn[a].autoCountry
                    ? this.handleAutoCountry()
                    : n.fn[a].startedLoadingAutoCountry ||
                    ((n.fn[a].startedLoadingAutoCountry = !0),
                        "function" == typeof this.options.geoIpLookup &&
                        this.options.geoIpLookup(function (i) {
                            (n.fn[a].autoCountry = i.toLowerCase()),
                                setTimeout(function () {
                                    n(".country-select input").countrySelect("handleAutoCountry");
                                });
                        }));
            },
            _focus: function () {
                this.countryInput.focus();
                var n = this.countryInput[0];
                if (n.setSelectionRange) {
                    var i = this.countryInput.val().length;
                    n.setSelectionRange(i, i);
                }
            },
            _showDropdown: function () {
                this._setDropdownPosition();
                var n = this.countryList.children(".active");
                this._highlightListItem(n), this.countryList.removeClass("hide"), this._scrollTo(n), this._bindDropdownListeners(), this.selectedFlagInner.parent().children(".arrow").addClass("up");
            },
            _setDropdownPosition: function () {
                var t = this.countryInput.offset().top,
                    e = n(i).scrollTop(),
                    a = t + this.countryInput.outerHeight() + this.dropdownHeight < e + n(i).height(),
                    s = t - this.dropdownHeight > e,
                    o = !a && s ? "-" + (this.dropdownHeight - 1) + "px" : "";
                this.countryList.css("top", o);
            },
            _bindDropdownListeners: function () {
                var i = this;
                this.countryList.on("mouseover" + this.ns, ".country", function (t) {
                    i._highlightListItem(n(this));
                }),
                    this.countryList.on("click" + this.ns, ".country", function (t) {
                        i._selectListItem(n(this));
                    });
                var e = !0;
                n("html").on("click" + this.ns, function (n) {
                    n.preventDefault(), e || i._closeDropdown(), (e = !1);
                }),
                    n(t).on("keydown" + this.ns, function (n) {
                        n.preventDefault(),
                            n.which == r || n.which == u
                                ? i._handleUpDownKey(n.which)
                                : n.which == l
                                    ? i._handleEnterKey()
                                    : n.which == h
                                        ? i._closeDropdown()
                                        : (n.which >= p && n.which <= y) || n.which === d
                                            ? ((i.typedLetters += String.fromCharCode(n.which)), i._filterCountries(i.typedLetters))
                                            : n.which === c && ((i.typedLetters = i.typedLetters.slice(0, -1)), i._filterCountries(i.typedLetters));
                    });
            },
            _handleUpDownKey: function (n) {
                var i = this.countryList.children(".highlight").first(),
                    t = n == r ? i.prev() : i.next();
                t.length && (t.hasClass("divider") && (t = n == r ? t.prev() : t.next()), this._highlightListItem(t), this._scrollTo(t));
            },
            _handleEnterKey: function () {
                var n = this.countryList.children(".highlight").first();
                n.length && this._selectListItem(n);
            },
            _filterCountries: function (i) {
                var t = this.countryListItems.filter(function () {
                    return 0 === n(this).text().toUpperCase().indexOf(i) && !n(this).hasClass("preferred");
                });
                if (t.length) {
                    var e,
                        a = t.filter(".highlight").first();
                    (e = a && a.next() && 0 === a.next().text().toUpperCase().indexOf(i) ? a.next() : t.first()), this._highlightListItem(e), this._scrollTo(e);
                }
            },
            _updateFlagFromInputVal: function () {
                var i = this,
                    t = this.countryInput.val().replace(/(?=[() ])/g, "\\");
                if (t) {
                    var e = [],
                        a = new RegExp(t, "i");
                    if (t.length <= 2) for (var s = 0; s < this.countries.length; s++) this.countries[s].iso2.match(a) && e.push(this.countries[s].iso2);
                    if (0 == e.length) for (s = 0; s < this.countries.length; s++) this.countries[s].name.match(a) && e.push(this.countries[s].iso2);
                    var o = !1;
                    return (
                        n.each(e, function (n, t) {
                            i.selectedFlagInner.hasClass(t) && (o = !0);
                        }),
                        o || (this._selectFlag(e[0]), this.countryCodeInput.val(e[0]).trigger("change")),
                        !0
                    );
                }
                return !1;
            },
            _highlightListItem: function (n) {
                this.countryListItems.removeClass("highlight"), n.addClass("highlight");
            },
            _getCountryData: function (n, i) {
                for (var t = i ? g : this.countries, e = 0; e < t.length; e++) if (t[e].iso2 == n) return t[e];
                return null;
            },
            _selectFlag: function (n) {
                if (!n) return !1;
                this.selectedFlagInner.attr("class", "flag " + n);
                var i = this._getCountryData(n);
                this.selectedFlagInner.parent().attr("title", i.name);
                var t = this.countryListItems
                    .children(".flag." + n)
                    .first()
                    .parent();
                this.countryListItems.removeClass("active"), t.addClass("active");
            },
            _selectListItem: function (n) {
                var i = n.attr("data-country-code");
                this._selectFlag(i), this._closeDropdown(), this._updateName(i), this.countryInput.trigger("change"), this.countryCodeInput.trigger("change"), this._focus();
            },
            _closeDropdown: function () {
                this.countryList.addClass("hide"),
                    this.selectedFlagInner.parent().children(".arrow").removeClass("up"),
                    n(t).off("keydown" + this.ns),
                    n("html").off("click" + this.ns),
                    this.countryList.off(this.ns),
                    (this.typedLetters = "");
            },
            _scrollTo: function (n) {
                if (n && n.offset()) {
                    var i = this.countryList,
                        t = i.height(),
                        e = i.offset().top,
                        a = e + t,
                        s = n.outerHeight(),
                        o = n.offset().top,
                        r = o + s,
                        u = o - e + i.scrollTop();
                    if (o < e) i.scrollTop(u);
                    else if (r > a) {
                        var l = t - s;
                        i.scrollTop(u - l);
                    }
                }
            },
            _updateName: function (n) {
                this.countryCodeInput.val(n).trigger("change"), this.countryInput.val(this._getCountryData(n).name);
            },
            handleAutoCountry: function () {
                "auto" === this.options.initialCountry && ((this.defaultCountry = n.fn[a].autoCountry), this.countryInput.val() || this.selectCountry(this.defaultCountry), this.autoCountryDeferred.resolve());
            },
            getSelectedCountryData: function () {
                var n = this.selectedFlagInner.attr("class").split(" ")[1];
                return this._getCountryData(n);
            },
            selectCountry: function (n) {
                (n = n.toLowerCase()), this.selectedFlagInner.hasClass(n) || (this._selectFlag(n), this._updateName(n));
            },
            setCountry: function (n) {
                this.countryInput.val(n), this._updateFlagFromInputVal();
            },
            destroy: function () {
                this.countryInput.off(this.ns), this.selectedFlagInner.parent().off(this.ns), this.countryInput.parent().before(this.countryInput).remove();
            },
        }),
        (n.fn[a] = function (i) {
            var t,
                s = arguments;
            return i === e || "object" == typeof i
                ? this.each(function () {
                    n.data(this, "plugin_" + a) || n.data(this, "plugin_" + a, new f(this, i));
                })
                : "string" == typeof i && "_" !== i[0] && "init" !== i
                    ? (this.each(function () {
                        var e = n.data(this, "plugin_" + a);
                        e instanceof f && "function" == typeof e[i] && (t = e[i].apply(e, Array.prototype.slice.call(s, 1))), "destroy" === i && n.data(this, "plugin_" + a, null);
                    }),
                        t !== e ? t : this)
                    : void 0;
        }),
        (n.fn[a].getCountryData = function () {
            return g;
        }),
        (n.fn[a].setCountryData = function (n) {
            g = n;
        });
    var g = n.each(
        [
            { n: "Afghan", i: "af" },
            { n: "Albanian", i: "al" },
            { n: "Algerian", i: "dz" },
            { n: "American", i: "mp" },
            { n: "American", i: "um" },
            { n: "American", i: "us" },
            { n: "American Samoan", i: "as" },
            { n: "Andorran", i: "ad" },
            { n: "Angolan", i: "ao" },
            { n: "Anguillian", i: "ai" },
            { n: "Antiguan, Barbudan", i: "ag" },
            { n: "Argentinean", i: "ar" },
            { n: "Aruba", i: "aw" },
            { n: "Aruban", i: "am" },
            { n: "Australian", i: "au" },
            { n: "Austrian", i: "at" },
            { n: "Azerbaijani", i: "az" },
            { n: "Bahamian", i: "bs" },
            { n: "Bahraini", i: "bh" },
            { n: "Bangladeshi", i: "bd" },
            { n: "Barbadian", i: "bb" },
            { n: "Belarusian", i: "by" },
            { n: "Belgian", i: "be" },
            { n: "Belizean", i: "bz" },
            { n: "Beninese", i: "bj" },
            { n: "Bermudian", i: "bm" },
            { n: "Bhutanese", i: "bt" },
            { n: "Bolivian", i: "bo" },
            { n: "Bosnian, Herzegovinian", i: "ba" },
            { n: "Brazilian", i: "br" },
            { n: "British", i: "gb" },
            { n: "Bruneian", i: "bn" },
            { n: "Bulgarian", i: "bg" },
            { n: "Burkinabe", i: "bf" },
            { n: "Burmese", i: "mm" },
            { n: "Burundian", i: "bi" },
            { n: "Cambodian", i: "kh" },
            { n: "Cameroonian", i: "cm" },
            { n: "Canadian", i: "ca" },
            { n: "Cape Verdian", i: "cv" },
            { n: "Caribbean Netherlands", i: "bq" },
            { n: "Caymanian", i: "ky" },
            { n: "Central African", i: "cf" },
            { n: "Chadian", i: "td" },
            { n: "Channel Islander", i: "gg" },
            { n: "Channel Islander", i: "je" },
            { n: "Chilean", i: "cl" },
            { n: "Chinese", i: "cn" },
            { n: "Chinese", i: "hk" },
            { n: "Chinese", i: "mo" },
            { n: "Christmas Island", i: "cx" },
            { n: "Cocos Islander", i: "cc" },
            { n: "Colombian", i: "co" },
            { n: "Comoran", i: "km" },
            { n: "Congolese", i: "cd" },
            { n: "Congolese", i: "cg" },
            { n: "Cook Islander", i: "ck" },
            { n: "Costa Rican", i: "cr" },
            { n: "Croatian", i: "hr" },
            { n: "Cuban", i: "cu" },
            { n: "Cypriot", i: "cy" },
            { n: "Czech", i: "cz" },
            { n: "Danish", i: "dk" },
            { n: "Djibouti", i: "dj" },
            { n: "Dominican", i: "dm" },
            { n: "Dominican", i: "do" },
            { n: "Dutch", i: "cw" },
            { n: "Dutch", i: "nl" },
            { n: "Dutch", i: "sx" },
            { n: "East Timorese", i: "tl" },
            { n: "Ecuadorean", i: "ec" },
            { n: "Egyptian", i: "eg" },
            { n: "Emirati", i: "ae" },
            { n: "Equatorial Guinean", i: "gq" },
            { n: "Eritrean", i: "er" },
            { n: "Estonian", i: "ee" },
            { n: "Ethiopian", i: "et" },
            { n: "Falkland Islander", i: "fk" },
            { n: "Faroese", i: "fo" },
            { n: "Fijian", i: "fj" },
            { n: "Filipino", i: "ph" },
            { n: "Finnish", i: "fi" },
            { n: "French", i: "fr" },
            { n: "French", i: "mq" },
            { n: "French", i: "pm" },
            { n: "French", i: "yt" },
            { n: "French Guiana (Guyane française)", i: "gf" },
            { n: "French Polynesian", i: "pf" },
            { n: "Gabonese", i: "ga" },
            { n: "Gambian", i: "gm" },
            { n: "Georgian", i: "ge" },
            { n: "German", i: "de" },
            { n: "Ghanaian", i: "gh" },
            { n: "Gibraltar", i: "gi" },
            { n: "Greek", i: "gr" },
            { n: "Greenlandic", i: "gl" },
            { n: "Grenadian", i: "gd" },
            { n: "Guadeloupian", i: "gp" },
            { n: "Guamanian", i: "gu" },
            { n: "Guatemalan", i: "gt" },
            { n: "Guinea-Bissauan", i: "gw" },
            { n: "Guinean", i: "gn" },
            { n: "Guyanese", i: "gy" },
            { n: "Haitian", i: "ht" },
            { n: "Honduran", i: "hn" },
            { n: "Hungarian", i: "hu" },
            { n: "I-Kiribati", i: "ki" },
            { n: "Icelander", i: "is" },
            { n: "Indian", i: "in" },
            { n: "Indian", i: "io" },
            { n: "Indonesian", i: "id" },
            { n: "Iranian", i: "ir" },
            { n: "Iraqi", i: "iq" },
            { n: "Irish", i: "ie" },
            { n: "Israeli", i: "il" },
            { n: "Italian", i: "it" },
            { n: "Ivorian", i: "ci" },
            { n: "Jamaican", i: "jm" },
            { n: "Japanese", i: "jp" },
            { n: "Jordanian", i: "jo" },
            { n: "Kazakhstani", i: "kz" },
            { n: "Kenyan", i: "ke" },
            { n: "Kirghiz", i: "kg" },
            { n: "Kittian and Nevisian", i: "kn" },
            { n: "Kosovo (Kosovë)", i: "xk" },
            { n: "Kuwaiti", i: "kw" },
            { n: "Laotian", i: "la" },
            { n: "Latvian", i: "lv" },
            { n: "Lebanese", i: "lb" },
            { n: "Liberian", i: "lr" },
            { n: "Libyan", i: "ly" },
            { n: "Liechtensteiner", i: "li" },
            { n: "Lithuanian", i: "lt" },
            { n: "Luxembourger", i: "lu" },
            { n: "Macedonian", i: "mk" },
            { n: "Malagasy", i: "mg" },
            { n: "Malawian", i: "mw" },
            { n: "Malaysian", i: "my" },
            { n: "Maldivan", i: "mv" },
            { n: "Malian", i: "ml" },
            { n: "Maltese", i: "mt" },
            { n: "Manx", i: "im" },
            { n: "Marshallese", i: "mh" },
            { n: "Mauritanian", i: "mr" },
            { n: "Mauritian", i: "mu" },
            { n: "Mexican", i: "mx" },
            { n: "Micronesian", i: "fm" },
            { n: "Moldovan", i: "md" },
            { n: "Monegasque", i: "mc" },
            { n: "Mongolian", i: "mn" },
            { n: "Montenegrin", i: "me" },
            { n: "Montserratian", i: "ms" },
            { n: "Moroccan", i: "ma" },
            { n: "Mosotho", i: "ls" },
            { n: "Motswana", i: "bw" },
            { n: "Mozambican", i: "mz" },
            { n: "Namibian", i: "na" },
            { n: "Nauruan", i: "nr" },
            { n: "Nepalese", i: "np" },
            { n: "New Caledonian", i: "nc" },
            { n: "New Zealander", i: "nz" },
            { n: "Ni-Vanuatu", i: "vu" },
            { n: "Nicaraguan", i: "ni" },
            { n: "Nigerien", i: "ne" },
            { n: "Nigerian", i: "ng" },
            { n: "Niuean", i: "nu" },
            { n: "Norfolk Islander", i: "nf" },
            { n: "North Korean", i: "kp" },
            { n: "Norwegian", i: "sj" },
            { n: "Omani", i: "om" },
            { n: "Pakistani", i: "pk" },
            { n: "Palauan", i: "pw" },
            { n: "Palestinian", i: "ps" },
            { n: "Panamanian", i: "pa" },
            { n: "Papua New Guinean", i: "pg" },
            { n: "Paraguayan", i: "py" },
            { n: "Peruvian", i: "pe" },
            { n: "Pitcairn Islander", i: "pn" },
            { n: "Polish", i: "pl" },
            { n: "Portuguese", i: "pt" },
            { n: "Puerto Rican", i: "pr" },
            { n: "Qatari", i: "qa" },
            { n: "Romanian", i: "ro" },
            { n: "Russian", i: "ru" },
            { n: "Rwandan", i: "rw" },
            { n: "Sahrawi", i: "eh" },
            { n: "Saint Barthélemy Islander", i: "bl" },
            { n: "Saint Helenian", i: "sh" },
            { n: "Saint Lucian", i: "lc" },
            { n: "Saint Martin Islander", i: "mf" },
            { n: "Saint Vincentian", i: "vc" },
            { n: "Salvadoran", i: "sv" },
            { n: "Sammarinese", i: "sm" },
            { n: "Samoan", i: "ws" },
            { n: "Sao Tomean", i: "st" },
            { n: "Saudi Arabian", i: "sa" },
            { n: "Senegalese", i: "sn" },
            { n: "Serbian", i: "rs" },
            { n: "Seychellois", i: "sc" },
            { n: "Sierra Leonean", i: "sl" },
            { n: "Singaporean", i: "sg" },
            { n: "Slovak", i: "sk" },
            { n: "Slovene", i: "si" },
            { n: "Solomon Islander", i: "sb" },
            { n: "Somali", i: "so" },
            { n: "South African", i: "za" },
            { n: "South Georgia and the South Sandwich Islander", i: "gs" },
            { n: "South Korean", i: "kr" },
            { n: "South Sudanese", i: "ss" },
            { n: "Spanish", i: "es" },
            { n: "Sri Lankan", i: "lk" },
            { n: "Sudanese", i: "sd" },
            { n: "Surinamer", i: "sr" },
            { n: "Swazi", i: "sz" },
            { n: "Swedish", i: "se" },
            { n: "Swiss", i: "ch" },
            { n: "Syrian", i: "sy" },
            { n: "Tadzhik", i: "tj" },
            { n: "Taiwanese", i: "tw" },
            { n: "Tanzanian", i: "tz" },
            { n: "Thai", i: "th" },
            { n: "Togolese", i: "tg" },
            { n: "Tokelauan", i: "tk" },
            { n: "Tongan", i: "to" },
            { n: "Trinidadian", i: "tt" },
            { n: "Tunisian", i: "tn" },
            { n: "Turkish", i: "tr" },
            { n: "Turkmen", i: "tm" },
            { n: "Turks and Caicos Islander", i: "tc" },
            { n: "Tuvaluan", i: "tv" },
            { n: "Ugandan", i: "ug" },
            { n: "Ukrainian", i: "ua" },
            { n: "Uruguayan", i: "uy" },
            { n: "Uzbekistani", i: "uz" },
            { n: "Vatican City (Città del Vaticano)", i: "va" },
            { n: "Venezuelan", i: "ve" },
            { n: "Vietnamese", i: "vn" },
            { n: "Virgin Islander", i: "vg" },
            { n: "Virgin Islander", i: "vi" },
            { n: "Wallis and Futuna Islander", i: "wf" },
            { n: "Yemeni", i: "ye" },
            { n: "Zambian", i: "zm" },
            { n: "Zimbabwean", i: "zw" },
            { n: "Ålandish", i: "ax" },
        ],
        function (n, i) {
            (i.name = i.n), (i.iso2 = i.i), delete i.n, delete i.i;
        }
    );
});
